---
repos:

  - repo: https://github.com/asottile/reorder_python_imports
    rev: master
    hooks:
      - id: reorder-python-imports
        args: [
          '--py37-plus',
        ]
        language: system
        exclude: ^buglog/data/

  - repo: git@github.com:humitos/mirrors-autoflake.git
    rev: master
    hooks:
      - id: autoflake
        args: [
          '--in-place',
          '--remove-all-unused-imports',
          '--remove-unused-variable',
        ]
        language: system
        exclude: ^buglog/data/

  - repo: https://github.com/psf/black
    rev: master
    hooks:
      - id: black
        language: system
        exclude: ^buglog/data/

  - repo: https://github.com/pappasam/toml-sort
    rev: master
    hooks:
      - id: toml-sort
        args: ['--in-place']
        language: system

  - repo: local
    hooks:
      - id: python-safety-dependencies-check
        name: Run safety on project packages.
        entry: |
          sh -c '
            poetry export -f requirements.txt |
            pipx run safety check --stdin
          '
        pass_filenames: false
        language: system


  - repo: https://github.com/adrienverge/yamllint.git
    rev: master
    hooks:
      - id: yamllint
        args: [--format, parsable, --strict]

  - repo: https://github.com/Lucas-C/pre-commit-hooks-markup
    rev: master
    hooks:
      - id: rst-linter

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: master
    hooks:
      # Prevent giant files from being committed
      - id: check-added-large-files
      # Simply check whether the files parse as valid python
      - id: check-ast
      # Forbid files which have a UTF-8 byte-order marker
      - id: check-byte-order-marker
      # Require literal syntax when initializing empty
      # or zero Python builtin types
      - id: check-builtin-literals
      # Check for files that would conflict in case-insensitive filesystems
      - id: check-case-conflict
      # Checks a common error of defining a docstring after code
      - id: check-docstring-first
      # Ensures that (non-binary) executables have a shebang
      - id: check-executables-have-shebangs
      # Check json files for parseable syntax
      - id: check-json
      # Set a standard for formatting JSON files
      - id: pretty-format-json
      # Check for files that contain merge conflict strings
      - id: check-merge-conflict
      # Check for symlinks which do not point to anything
      - id: check-symlinks
      # Check toml files for parseable syntax
      - id: check-toml
      # Ensure that links to vcs websites are permalinks
      - id: check-vcs-permalinks
      # Check xml files for parseable syntax
      - id: check-xml
      # Check yaml files for parseable syntax
      - id: check-yaml
      # Check for debugger imports and py37+ `breakpoint()`
      # calls in python source
      - id: debug-statements
      # Detect *your* aws credentials from the aws cli credentials file
      - id: detect-aws-credentials
      # Detect the presence of private keys
      - id: detect-private-key
      # Replace double quoted strings with single quoted strings
      # Ensure that a file is either empty, or ends with one newline
      - id: end-of-file-fixer
      # Sort the lines in specified files (defaults to alphabetical).
      # You must provide list of target files as input in your
      # .pre-commit-config.yaml file
      - id: file-contents-sorter
      # Prevent addition of new git submodules
      - id: forbid-new-submodules
      # Replace or checks mixed line ending
      - id: mixed-line-ending
      # This verifies that test files are named correctly
      # - id: name-tests-test
      # Don't commit to branch
      # - id: no-commit-to-branch
      # Sort entries in requirements.txt
      - id: requirements-txt-fixer
      # Sort simple YAML files which consist only of top-level keys,
      # preserving comments and blocks
      - id: sort-simple-yaml
      # Trim trailing whitespace
      - id: trailing-whitespace

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: master
    hooks:
      # Shell scripts conform to shellcheck
      - id: shellcheck
      # Non-executable shell script filename ends in .sh
      - id: script-must-have-extension
      # Executable shell script omits the filename extension
      - id: script-must-not-have-extension
